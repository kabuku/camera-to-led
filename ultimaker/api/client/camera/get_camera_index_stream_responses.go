package camera

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetCameraIndexStreamReader is a Reader for the GetCameraIndexStream structure.
type GetCameraIndexStreamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCameraIndexStreamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 302:
		result := NewGetCameraIndexStreamFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCameraIndexStreamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCameraIndexStreamFound creates a GetCameraIndexStreamFound with default headers values
func NewGetCameraIndexStreamFound() *GetCameraIndexStreamFound {
	return &GetCameraIndexStreamFound{}
}

/*GetCameraIndexStreamFound handles this case with default header values.

Redirection to the camera feed.
*/
type GetCameraIndexStreamFound struct {
}

func (o *GetCameraIndexStreamFound) Error() string {
	return fmt.Sprintf("[GET /camera/{index}/stream][%d] getCameraIndexStreamFound ", 302)
}

func (o *GetCameraIndexStreamFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCameraIndexStreamNotFound creates a GetCameraIndexStreamNotFound with default headers values
func NewGetCameraIndexStreamNotFound() *GetCameraIndexStreamNotFound {
	return &GetCameraIndexStreamNotFound{}
}

/*GetCameraIndexStreamNotFound handles this case with default header values.

Camera with this index is not available in the system.
*/
type GetCameraIndexStreamNotFound struct {
}

func (o *GetCameraIndexStreamNotFound) Error() string {
	return fmt.Sprintf("[GET /camera/{index}/stream][%d] getCameraIndexStreamNotFound ", 404)
}

func (o *GetCameraIndexStreamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
