package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPutPrinterNetworkWifiNetworksSsidParams creates a new PutPrinterNetworkWifiNetworksSsidParams object
// with the default values initialized.
func NewPutPrinterNetworkWifiNetworksSsidParams() *PutPrinterNetworkWifiNetworksSsidParams {
	var ()
	return &PutPrinterNetworkWifiNetworksSsidParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutPrinterNetworkWifiNetworksSsidParamsWithTimeout creates a new PutPrinterNetworkWifiNetworksSsidParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutPrinterNetworkWifiNetworksSsidParamsWithTimeout(timeout time.Duration) *PutPrinterNetworkWifiNetworksSsidParams {
	var ()
	return &PutPrinterNetworkWifiNetworksSsidParams{

		timeout: timeout,
	}
}

// NewPutPrinterNetworkWifiNetworksSsidParamsWithContext creates a new PutPrinterNetworkWifiNetworksSsidParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutPrinterNetworkWifiNetworksSsidParamsWithContext(ctx context.Context) *PutPrinterNetworkWifiNetworksSsidParams {
	var ()
	return &PutPrinterNetworkWifiNetworksSsidParams{

		Context: ctx,
	}
}

// NewPutPrinterNetworkWifiNetworksSsidParamsWithHTTPClient creates a new PutPrinterNetworkWifiNetworksSsidParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutPrinterNetworkWifiNetworksSsidParamsWithHTTPClient(client *http.Client) *PutPrinterNetworkWifiNetworksSsidParams {
	var ()
	return &PutPrinterNetworkWifiNetworksSsidParams{
		HTTPClient: client,
	}
}

/*PutPrinterNetworkWifiNetworksSsidParams contains all the parameters to send to the API endpoint
for the put printer network wifi networks ssid operation typically these are written to a http.Request
*/
type PutPrinterNetworkWifiNetworksSsidParams struct {

	/*Passphrase
	  Phassphrase of network to connect with

	*/
	Passphrase string
	/*Ssid
	  ssid of the network to connect with.

	*/
	Ssid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put printer network wifi networks ssid params
func (o *PutPrinterNetworkWifiNetworksSsidParams) WithTimeout(timeout time.Duration) *PutPrinterNetworkWifiNetworksSsidParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put printer network wifi networks ssid params
func (o *PutPrinterNetworkWifiNetworksSsidParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put printer network wifi networks ssid params
func (o *PutPrinterNetworkWifiNetworksSsidParams) WithContext(ctx context.Context) *PutPrinterNetworkWifiNetworksSsidParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put printer network wifi networks ssid params
func (o *PutPrinterNetworkWifiNetworksSsidParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put printer network wifi networks ssid params
func (o *PutPrinterNetworkWifiNetworksSsidParams) WithHTTPClient(client *http.Client) *PutPrinterNetworkWifiNetworksSsidParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put printer network wifi networks ssid params
func (o *PutPrinterNetworkWifiNetworksSsidParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPassphrase adds the passphrase to the put printer network wifi networks ssid params
func (o *PutPrinterNetworkWifiNetworksSsidParams) WithPassphrase(passphrase string) *PutPrinterNetworkWifiNetworksSsidParams {
	o.SetPassphrase(passphrase)
	return o
}

// SetPassphrase adds the passphrase to the put printer network wifi networks ssid params
func (o *PutPrinterNetworkWifiNetworksSsidParams) SetPassphrase(passphrase string) {
	o.Passphrase = passphrase
}

// WithSsid adds the ssid to the put printer network wifi networks ssid params
func (o *PutPrinterNetworkWifiNetworksSsidParams) WithSsid(ssid string) *PutPrinterNetworkWifiNetworksSsidParams {
	o.SetSsid(ssid)
	return o
}

// SetSsid adds the ssid to the put printer network wifi networks ssid params
func (o *PutPrinterNetworkWifiNetworksSsidParams) SetSsid(ssid string) {
	o.Ssid = ssid
}

// WriteToRequest writes these params to a swagger request
func (o *PutPrinterNetworkWifiNetworksSsidParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param passphrase
	frPassphrase := o.Passphrase
	fPassphrase := frPassphrase
	if fPassphrase != "" {
		if err := r.SetFormParam("passphrase", fPassphrase); err != nil {
			return err
		}
	}

	// path param ssid
	if err := r.SetPathParam("ssid", o.Ssid); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
