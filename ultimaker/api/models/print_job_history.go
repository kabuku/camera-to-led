package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PrintJobHistory A print job in the past.
// swagger:model PrintJobHistory
type PrintJobHistory struct {

	// datetime cleaned
	DatetimeCleaned strfmt.DateTime `json:"datetime_cleaned,omitempty"`

	// datetime finished
	DatetimeFinished strfmt.DateTime `json:"datetime_finished,omitempty"`

	// datetime started
	DatetimeStarted strfmt.DateTime `json:"datetime_started,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// result
	Result string `json:"result,omitempty"`

	// source
	Source string `json:"source,omitempty"`

	// time elapsed
	TimeElapsed int64 `json:"time_elapsed,omitempty"`

	// uuid
	UUID UUID `json:"uuid,omitempty"`
}

// Validate validates this print job history
func (m *PrintJobHistory) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResult(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var printJobHistoryTypeResultPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Finished","Aborted"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		printJobHistoryTypeResultPropEnum = append(printJobHistoryTypeResultPropEnum, v)
	}
}

const (
	// PrintJobHistoryResultFinished captures enum value "Finished"
	PrintJobHistoryResultFinished string = "Finished"
	// PrintJobHistoryResultAborted captures enum value "Aborted"
	PrintJobHistoryResultAborted string = "Aborted"
)

// prop value enum
func (m *PrintJobHistory) validateResultEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, printJobHistoryTypeResultPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PrintJobHistory) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(m.Result) { // not required
		return nil
	}

	// value enum
	if err := m.validateResultEnum("result", "body", m.Result); err != nil {
		return err
	}

	return nil
}
